/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2022-12-23 09:32:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sign_005fin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1670891023399L));
    _jspx_dependants.put("jar:file:/C:/dev_source/Team2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Team2/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>로그인 페이지</title>\r\n");
      out.write("    <!-- Main Theme Styles + Bootstrap  + Page Loading Styles -->\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/theme.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/common/page-loading.css\">\r\n");
      out.write("    <!-- SEO Meta Tags-->\r\n");
      out.write("    <meta name=\"description\" content=\"Finder - Directory &amp; Listings Bootstrap Template\">\r\n");
      out.write("    <meta name=\"keywords\"\r\n");
      out.write("        content=\"bootstrap, business, directory, listings, e-commerce, car dealer, city guide, real estate, job board, user account, multipurpose, ui kit, html5, css3, javascript, gallery, slider, touch\">\r\n");
      out.write("    <meta name=\"author\" content=\"Createx Studio\">\r\n");
      out.write("    <!-- Viewport-->\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- Vendor Styles-->\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/vendor/simplebar.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/vendor/tiny-slider.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/vendor/flatpickr.min.css\" />\r\n");
      out.write("    <!-- 직접 작성한 Styles -->\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/common/common.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/common/header-footer.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"resources/css/sign_in.css\">\r\n");
      out.write("\r\n");
      out.write("    <!--쿠키로 아이디 저장하는 스크립트-->\r\n");
      out.write("    <script>\r\n");
      out.write("        $(document).ready(function () {\r\n");
      out.write("            // 저장된 쿠키값을 가져와서 ID 칸에 넣어준다. 없으면 공백으로 들어감.\r\n");
      out.write("            var key = getCookie(\"key\");\r\n");
      out.write("            $(\"#ID\").val(key);\r\n");
      out.write("\r\n");
      out.write("            // 그 전에 ID를 저장해서 처음 페이지 로딩 시, 입력 칸에 저장된 ID가 표시된 상태라면,\r\n");
      out.write("            if ($(\"#ID\").val() != \"\") {\r\n");
      out.write("                $(\"#checkId\").attr(\"checked\", true); // ID 저장하기를 체크 상태로 두기.\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $(\"#checkId\").change(function () { // 체크박스에 변화가 있다면,\r\n");
      out.write("                if ($(\"#checkId\").is(\":checked\")) { // ID 저장하기 체크했을 때,\r\n");
      out.write("                    setCookie(\"key\", $(\"#ID\").val(), 7); // 7일 동안 쿠키 보관\r\n");
      out.write("                } else { // ID 저장하기 체크 해제 시,\r\n");
      out.write("                    deleteCookie(\"key\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // ID 저장하기를 체크한 상태에서 ID를 입력하는 경우, 이럴 때도 쿠키 저장.\r\n");
      out.write("            $(\"#userId\").keyup(function () { // ID 입력 칸에 ID를 입력할 때,\r\n");
      out.write("                if ($(\"#checkId\").is(\":checked\")) { // ID 저장하기를 체크한 상태라면,\r\n");
      out.write("                    setCookie(\"key\", $(\"#ID\").val(), 7); // 7일 동안 쿠키 보관\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 쿠키 저장하기 \r\n");
      out.write("        // setCookie => saveid함수에서 넘겨준 시간이 현재시간과 비교해서 쿠키를 생성하고 지워주는 역할\r\n");
      out.write("        function setCookie(cookieName, value, exdays) {\r\n");
      out.write("            var exdate = new Date();\r\n");
      out.write("            exdate.setDate(exdate.getDate() + exdays);\r\n");
      out.write("            var cookieValue = escape(value)\r\n");
      out.write("                + ((exdays == null) ? \"\" : \"; expires=\" + exdate.toGMTString());\r\n");
      out.write("            document.cookie = cookieName + \"=\" + cookieValue;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 쿠키 삭제\r\n");
      out.write("        function deleteCookie(cookieName) {\r\n");
      out.write("            var expireDate = new Date();\r\n");
      out.write("            expireDate.setDate(expireDate.getDate() - 1);\r\n");
      out.write("            document.cookie = cookieName + \"= \" + \"; expires=\"\r\n");
      out.write("                + expireDate.toGMTString();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 쿠키 가져오기\r\n");
      out.write("        function getCookie(cookieName) {\r\n");
      out.write("            cookieName = cookieName + '=';\r\n");
      out.write("            var cookieData = document.cookie;\r\n");
      out.write("            var start = cookieData.indexOf(cookieName);\r\n");
      out.write("            var cookieValue = '';\r\n");
      out.write("            if (start != -1) { // 쿠키가 존재하면\r\n");
      out.write("                start += cookieName.length;\r\n");
      out.write("                var end = cookieData.indexOf(';', start);\r\n");
      out.write("                if (end == -1) // 쿠키 값의 마지막 위치 인덱스 번호 설정 \r\n");
      out.write("                    end = cookieData.length;\r\n");
      out.write("                console.log(\"end위치  : \" + end);\r\n");
      out.write("                cookieValue = cookieData.substring(start, end);\r\n");
      out.write("            }\r\n");
      out.write("            return unescape(cookieValue);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"page\">\r\n");
      out.write("        <h1 class=\"logo\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">나만의 박물관</a></h1>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"login\">\r\n");
      out.write("            <h1>로그인</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("        <hr style=\"\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("        background-color: var(--clr-green);\r\n");
      out.write("        border: none;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 2px;\">\r\n");
      out.write("\r\n");
      out.write("        <form id=\"loginFrm\" action=\"IDmemLogin\" method=\"POST\">\r\n");
      out.write("            <div class=\"text_id\">\r\n");
      out.write("                <h1>아이디</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"text\" name=\"ID\" id=\"ID\" class=\"text_field\" required=\"required\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"text_pw\">\r\n");
      out.write("                <h1>비밀번호</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"password\" name=\"PASSWORD\" id=\"PASSWORD\" class=\"text_field\" required=\"required\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"save\" style=\"margin-top: 5px\">\r\n");
      out.write("                <input type=\"checkbox\" id=\"checkId\">\r\n");
      out.write("                <label for=\"checkId\"></label>\r\n");
      out.write("                <h1>아이디 기억하기</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <input type=\"submit\" class=\"login_btn\" value=\"로그인\">\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <hr style=\"\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("        background-color: var(--clr-green);\r\n");
      out.write("        border: none;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 2px;\">\r\n");
      out.write("\r\n");
      out.write("        <!-- 링크 -->\r\n");
      out.write("        <ul class=\"links\">\r\n");
      out.write("            <li>\r\n");
      out.write("                <h1><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/findId.do\">아이디 찾기 </a></h1>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <h1><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/find.pw\">비밀번호 찾기 </a> </h1>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <h1><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/sign_up\">회원가입</a></h1>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"simple_login\">\r\n");
      out.write("            <!-- <h1>간편 로그인</h1> -->\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!--카카오 간편로그인-->\r\n");
      out.write("        <a href=\"javascript:kakaoLogin();\">\r\n");
      out.write("            <div class=\"kakao_btn\">\r\n");
      out.write("                <img src=\"resources/img/login_image/kakao_logo.png\" class=\"logo_icon\">\r\n");
      out.write("                <h1>카카오 로그인</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("        <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\r\n");
      out.write("        <script>\r\n");
      out.write("            window.Kakao.init('본인 JAVASCRIPT API 키');\r\n");
      out.write("            function kakaoLogin() {\r\n");
      out.write("                window.Kakao.Auth.login({\r\n");
      out.write("                    scope: 'profile, account_email, gender, age_range, birthday', //동의항목 페이지에 있는 개인정보 보호 테이블의 활성화된 ID값을 넣습니다.\r\n");
      out.write("                    success: function (response) {\r\n");
      out.write("                        console.log(response) // 로그인 성공하면 받아오는 데이터\r\n");
      out.write("                        window.Kakao.API.request({ // 사용자 정보 가져오기 \r\n");
      out.write("                            url: '/v2/user/me',\r\n");
      out.write("                            success: (res) => {\r\n");
      out.write("                                const kakao_account = res.kakao_account;\r\n");
      out.write("                                console.log(kakao_account)\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                        // window.location.href='/ex/kakao_login.html' //리다이렉트 되는 코드\r\n");
      out.write("                    },\r\n");
      out.write("                    fail: function (error) {\r\n");
      out.write("                        console.log(error);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("        <!--네이버 간편로그인-->\r\n");
      out.write("        <a id=\"naverIdLogin_loginButton\" href=\"javascript:void(0)\">\r\n");
      out.write("            <div class=\"naver_btn\">\r\n");
      out.write("                <img src=\"resources/img/login_image/naver_logo.png\" class=\"logo_icon\">\r\n");
      out.write("                <h1>네이버 로그인</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("        <!-- 네이버 스크립트 -->\r\n");
      out.write("        <script src=\"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\" charset=\"utf-8\"></script>\r\n");
      out.write("        <script>\r\n");
      out.write("            var naverLogin = new naver.LoginWithNaverId(\r\n");
      out.write("                {\r\n");
      out.write("                    clientId: \"\", //내 애플리케이션 정보에 cliendId를 입력해줍니다.\r\n");
      out.write("                    callbackUrl: \"\", // 내 애플리케이션 API설정의 Callback URL 을 입력해줍니다.\r\n");
      out.write("                    isPopup: false,\r\n");
      out.write("                    callbackHandle: true\r\n");
      out.write("                }\r\n");
      out.write("            );\r\n");
      out.write("            naverLogin.init();\r\n");
      out.write("            window.addEventListener('load', function () {\r\n");
      out.write("                naverLogin.getLoginStatus(function (status) {\r\n");
      out.write("                    if (status) {\r\n");
      out.write("                        var email = naverLogin.user.getEmail(); // 필수로 설정할것을 받아와 아래처럼 조건문을 줍니다.\r\n");
      out.write("\r\n");
      out.write("                        console.log(naverLogin.user);\r\n");
      out.write("\r\n");
      out.write("                        if (email == undefined || email == null) {\r\n");
      out.write("                            alert(\"이메일은 필수정보입니다. 정보제공을 동의해주세요.\");\r\n");
      out.write("                            naverLogin.reprompt();\r\n");
      out.write("                            return;\r\n");
      out.write("                        }\r\n");
      out.write("                    } else {\r\n");
      out.write("                        console.log(\"callback 처리에 실패하였습니다.\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            var testPopUp;\r\n");
      out.write("            function openPopUp() {\r\n");
      out.write("                testPopUp = window.open(\"https://nid.naver.com/nidlogin.logout\", \"_blank\", \"toolbar=yes,scrollbars=yes,resizable=yes,width=1,height=1\");\r\n");
      out.write("            }\r\n");
      out.write("            function closePopUp() {\r\n");
      out.write("                testPopUp.close();\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!--구글 간편로그인-->\r\n");
      out.write("        <a href=\"\">\r\n");
      out.write("            <div class=\"google_btn\">\r\n");
      out.write("                <img src=\"resources/img/login_image/google_logo.png\" class=\"logo_icon\">\r\n");
      out.write("                <h1>구글 로그인</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Footer-->\r\n");
      out.write("    <footer class=\"footer pt-lg-5 pt-4 footer_color text-light\">\r\n");
      out.write("        <br> <br>\r\n");
      out.write("        <hr />\r\n");
      out.write("        <br> <br>\r\n");
      out.write("        <div class=\"footer_expression\">\r\n");
      out.write("            © Front. 2021 Htmlstream. All rights reserved.<br>\r\n");
      out.write("\r\n");
      out.write("            When you visit or interact with our sites, services or tools, we or our authorised service providers may use\r\n");
      out.write("            cookies for storing information to <br>\r\n");
      out.write("            help provide you with a better, faster and safer experience and for marketing purposes.\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"py-4 border-top border-light\">\r\n");
      out.write("            <div class=\"container d-flex flex-column flex-lg-row align-items-center justify-content-between py-2\">\r\n");
      out.write("                <!-- Copyright-->\r\n");
      out.write("                <p class=\"order-lg-1 order-2 fs-sm mb-2 mb-lg-0\"><span class=\"text-light opacity-60\">&copy; All rights\r\n");
      out.write("                        reserved. Made by </span><a class=\"nav-link-light fw-bold\" href=\"https://createx.studio/\"\r\n");
      out.write("                        target=\"_blank\" rel=\"noopener\">Createx Studio</a></p>\r\n");
      out.write("                <div class=\"d-flex flex-lg-row flex-column align-items-center order-lg-2 order-1 ms-lg-4 mb-lg-0 mb-4\">\r\n");
      out.write("                    <!-- Links-->\r\n");
      out.write("                    <div class=\"d-flex flex-wrap fs-sm mb-lg-0 mb-4 pe-lg-4\"><a class=\"nav-link-light px-2 mx-1\"\r\n");
      out.write("                            href=\"#\">About</a><a class=\"nav-link-light px-2 mx-1\" href=\"#\">Blog</a><a\r\n");
      out.write("                            class=\"nav-link-light px-2 mx-1\" href=\"#\">Support</a><a class=\"nav-link-light px-2 mx-1\"\r\n");
      out.write("                            href=\"#\">Contacts</a></div>\r\n");
      out.write("                    <div class=\"d-flex align-items-center\">\r\n");
      out.write("                        <!-- Language switcher -->\r\n");
      out.write("                        <div class=\"dropdown\"><a\r\n");
      out.write("                                class=\"nav-link nav-link-light dropdown-toggle fs-sm align-items-center p-0 fw-normal\"\r\n");
      out.write("                                href=\"#\" id=\"langSwitcher\" data-bs-toggle=\"dropdown\" role=\"button\"\r\n");
      out.write("                                aria-expanded=\"false\"><i class=\"fi-globe mt-n1 me-2 align-middle\"></i>Eng</a>\r\n");
      out.write("                            <ul class=\"dropdown-menu dropdown-menu-dark my-1\" aria-labelledby=\"langSwitcher\">\r\n");
      out.write("                                <li><a class=\"dropdown-item text-nowrap py-1\" href=\"#\"><img class=\"me-2\"\r\n");
      out.write("                                            src=\"resources/img/flags/de.png\" width=\"20\" alt=\"Deutsch\">Deutsch</a></li>\r\n");
      out.write("                                <li><a class=\"dropdown-item text-nowrap py-1\" href=\"#\"><img class=\"me-2\"\r\n");
      out.write("                                            src=\"resources/img/flags/fr.png\" width=\"20\" alt=\"Français\">Français</a></li>\r\n");
      out.write("                                <li><a class=\"dropdown-item text-nowrap py-1\" href=\"#\"><img class=\"me-2\"\r\n");
      out.write("                                            src=\"resources/img/flags/es.png\" width=\"20\" alt=\"Español\">Español</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <!-- Socials-->\r\n");
      out.write("                        <div class=\"ms-4 ps-lg-2 text-nowrap\">\r\n");
      out.write("                            <a class=\"btn btn-icon btn-translucent-light btn-xs rounded-circle ms-2\"\r\n");
      out.write("                                style=\"color:black;\" href=\"#\">\r\n");
      out.write("                                <i class=\"fi-facebook\"></i></a>\r\n");
      out.write("                            <a class=\"btn btn-icon btn-translucent-light btn-xs rounded-circle ms-2\"\r\n");
      out.write("                                style=\"color:black;\" href=\"#\">\r\n");
      out.write("                                <i class=\"fi-twitter\"></i></a>\r\n");
      out.write("                            <a class=\"btn btn-icon btn-translucent-light btn-xs rounded-circle ms-2\"\r\n");
      out.write("                                style=\"color:black;\" href=\"#\">\r\n");
      out.write("                                <i class=\"fi-telegram\"></i></a>\r\n");
      out.write("                            <a class=\"btn btn-icon btn-translucent-light btn-xs rounded-circle ms-2\"\r\n");
      out.write("                                style=\"color:black;\" href=\"#\">\r\n");
      out.write("                                <i class=\"fi-messenger\"></i></a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <!-- Back to top button-->\r\n");
      out.write("    <a class=\"btn-scroll-top\" href=\"#top\" data-scroll><span\r\n");
      out.write("            class=\"btn-scroll-top-tooltip text-muted fs-sm me-2\">Top</span><i\r\n");
      out.write("            class=\"btn-scroll-top-icon fi-chevron-up\"></i></a>\r\n");
      out.write("\r\n");
      out.write("    <!-- Vendor scrits: js libraries and plugins-->\r\n");
      out.write("    <script src=\"resources/js/vendor/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"resources/js/vendor/simplebar.min.js\"></script>\r\n");
      out.write("    <script src=\"resources/js/vendor/smooth-scroll.polyfills.min.js\"></script>\r\n");
      out.write("    <script src=\"resources/js/vendor/tiny-slider.js\"></script>\r\n");
      out.write("    <script src=\"resources/js/vendor/flatpickr.min.js\"></script>\r\n");
      out.write("    <script src=\"resources/js/vendor/jarallax.min.js\"></script>\r\n");
      out.write("    <!-- Main theme script + Page Loading script -->\r\n");
      out.write("    <script src=\"resources/js/theme.js\"></script>\r\n");
      out.write("    <script src=\"resources/js/page-loading.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/sign_in.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("path");
      // /WEB-INF/views/member/sign_in.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/sign_in.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
